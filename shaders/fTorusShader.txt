#version 300 es

precision highp float;

uniform vec2 resolution;

out vec4 outColor;

float sdSphere(vec3 p, float s)
{
    return length(p) - s;
}


const vec3 sPos = vec3(0, 0, -2);

float map(vec3 p)
{
    return sdSphere(p - sPos, 1.0);
}

void main() {
    vec2 uv = gl_FragCoord.xy * 2.0 / resolution.y - vec2(resolution.x / resolution.y, 1.0);

    vec3 rd = normalize(vec3(uv.x, uv.y, -1));
    float t = 0.0;
    float h;
    for(int i = 0; i < 50; ++i)
    {
        vec3 pos = t * rd;
        h = map(pos);
        if (h < 0.0001) break;
        t += h;
    }

    vec3 col = vec3(step(h, 0.01));

    outColor = vec4(col, 1);
}