#version 300 es

precision highp float;

uniform float time;
uniform vec2 resolution;
uniform mat4 mProjInv;
uniform mat4 mViewInv;

out vec4 outColor;

float sdTorus(vec3 p, float rOuter, float rInner)
{
    vec2 q = vec2(length(p.xz) - rInner, p.y);
    return length(q) - rOuter;
}

float sdSphere(vec3 p, float s)
{
    return length(p) - s;
}

vec3 sBasePos = vec3(0, 0, 0);

float map(vec3 p)
{
    vec3 sPos = sBasePos;

    return sdTorus(p - sPos, 0.1, 1.0);
}

const float eps = 0.001;

void main() {
    vec2 uv = (gl_FragCoord.xy * 2.0 - resolution) / resolution;

    vec4 rayClip = mProjInv * vec4(uv.x, uv.y, -1.0, 1.0);
    rayClip.z = -1.0;
    rayClip.w = 0.0;
    rayClip = mViewInv * rayClip;

    vec3 ro = (mViewInv * vec4(0.0, 0.0, 0.0, 1.0)).xyz;
    vec3 rd = normalize(rayClip.xyz);
    float t = 0.0;
    float h;
    for(int i = 0; i < 50; ++i)
    {
        vec3 pos = ro + t * rd;
        h = map(pos);
        if (h < eps) 
            break;
        t += h;
    }

    vec3 col = vec3(step(h, eps));

    outColor = vec4(col, 1.0);
}